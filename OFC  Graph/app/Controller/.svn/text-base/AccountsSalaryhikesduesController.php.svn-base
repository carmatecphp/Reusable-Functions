<?php
App::uses('AppController', 'Controller');
/**
 * AccountsSalaryhikesdues Controller
 *
 * @property AccountsSalaryhikesdue $AccountsSalaryhikesdue
 */
class AccountsSalaryhikesduesController extends AppController {


/**
 * index method
 *
 * @return void
 */
	public function index() {
		Configure::write('debug',2);
		pr('zxc');
		$this->AccountsSalaryhikesdue->recursive = 0;
		$this->set('accountsSalaryhikesdues', $this->paginate());
	}

/**
 * view method
 *
 * @param string $id
 * @return void
 */
	public function view($id = null) {
		$this->AccountsSalaryhikesdue->id = $id;
		if (!$this->AccountsSalaryhikesdue->exists()) {
			throw new NotFoundException(__('Invalid accounts salaryhikesdue'));
		}
		$this->set('accountsSalaryhikesdue', $this->AccountsSalaryhikesdue->read(null, $id));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		if ($this->request->is('post')) {
			$this->AccountsSalaryhikesdue->create();
			if ($this->AccountsSalaryhikesdue->save($this->request->data)) {
				$this->Session->setFlash(__('The accounts salaryhikesdue has been saved'));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The accounts salaryhikesdue could not be saved. Please, try again.'));
			}
		}
		$staffs = $this->AccountsSalaryhikesdue->Staff->find('list');
		$this->set(compact('staffs'));
	}

/**
 * edit method
 *
 * @param string $id
 * @return void
 */
	public function edit($id = null) {
		$this->AccountsSalaryhikesdue->id = $id;
		if (!$this->AccountsSalaryhikesdue->exists()) {
			throw new NotFoundException(__('Invalid accounts salaryhikesdue'));
		}
		if ($this->request->is('post') || $this->request->is('put')) {
			if ($this->AccountsSalaryhikesdue->save($this->request->data)) {
				$this->Session->setFlash(__('The accounts salaryhikesdue has been saved'));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The accounts salaryhikesdue could not be saved. Please, try again.'));
			}
		} else {
			$this->request->data = $this->AccountsSalaryhikesdue->read(null, $id);
		}
		$staffs = $this->AccountsSalaryhikesdue->Staff->find('list');
		$this->set(compact('staffs'));
	}

/**
 * delete method
 *
 * @param string $id
 * @return void
 */
	public function delete($id = null) {
		if (!$this->request->is('post')) {
			throw new MethodNotAllowedException();
		}
		$this->AccountsSalaryhikesdue->id = $id;
		if (!$this->AccountsSalaryhikesdue->exists()) {
			throw new NotFoundException(__('Invalid accounts salaryhikesdue'));
		}
		if ($this->AccountsSalaryhikesdue->delete()) {
			$this->Session->setFlash(__('Accounts salaryhikesdue deleted'));
			$this->redirect(array('action'=>'index'));
		}
		$this->Session->setFlash(__('Accounts salaryhikesdue was not deleted'));
		$this->redirect(array('action' => 'index'));
	}
}
