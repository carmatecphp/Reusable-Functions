<?php

App::uses('AppController', 'Controller','CakeNumber', 'Utility');
class AccountsAccountsController extends AppController {
	
	/***** Return the money format  *****/
public function amountFormat ($amount)	{
		
		
		if($amount < 0){
			if($amount <= -100000 && $amount >= -99999999){
				$monthAmount = ($amount/-1000);
				$amt = money_format('%!(.0n',$monthAmount);
				$amnt    = '('.$amt.') '.'K';			
				return $amnt;
			}
			elseif($amount <= -100000000){
				$monthAmount = ($amount/-1000000);
				$amt = money_format('%!(.0n',$monthAmount);
				$amnt    = '('.$amt.') '.'M';
				return $amnt;
			}
			else{
				$amt = money_format('%!(.0n',$amount);
				return $amt;
			}
		}else{
			if($amount >= 100000 && $amount <= 99999999){
				$monthAmount = ($amount/1000);
				$amt = money_format('%!(.0n',$monthAmount);
				$amnt    = $amt.' '.'K';			
				return $amnt;
			}
			elseif($amount >= 100000000){
				$monthAmount = ($amount/1000000);
				$amt = money_format('%!(.0n',$monthAmount);
				$amnt    = $amt.' '.'M';
				return $amnt;
			}
			else{
				$amt = money_format('%!(.0n',$amount);
				return $amt;
			}
		}
	
	}

/***** Return the date difference  *****/
function datediff($interval, $datefrom, $dateto, $using_timestamps = false) {
 /*
 $interval can be:
yyyy - Number of full years
q - Number of full quarters
m - Number of full months
y - Difference between day numbers(eg 1st Jan 2004 is "1", the first day. 2nd Feb 2003 is "33". The datediff is "-32".)
d - Number of full days
w - Number of full weekdays
ww - Number of full weeks
h - Number of full hours
n - Number of full minutes
s - Number of full seconds (default)
*/
if (!$using_timestamps) {
	$datefrom = strtotime($datefrom, 0);
	$dateto = strtotime($dateto, 0);
}
$difference = $dateto - $datefrom; // Difference in seconds
switch($interval) {
	case 'yyyy': // Number of full years
			$years_difference = floor($difference / 31536000);
			if (mktime(date("H", $datefrom), date("i", $datefrom), date("s", $datefrom), date("n", $datefrom), date("j", $datefrom), date("Y", $datefrom)+$years_difference) > $dateto) {
			     $years_difference--;
			}
			if (mktime(date("H", $dateto), date("i", $dateto), date("s", $dateto), date("n", $dateto), date("j", $dateto), date("Y", $dateto)-($years_difference+1)) > $datefrom) {
			            $years_difference++;
			}
			$datediff = $years_difference;
			break;
	 case "q": // Number of full quarters
		   $quarters_difference = floor($difference / 8035200);
		    while (mktime(date("H", $datefrom), date("i", $datefrom), date("s", $datefrom), date("n", $datefrom)+($quarters_difference*3), date("j", $dateto), date("Y", $datefrom)) < $dateto) {
			            $months_difference++;
		    }
		    $quarters_difference--;
		    $datediff = $quarters_difference;
		    break;
	case "m": // Number of full months
		  $months_difference = floor($difference / 2678400);
		  while (mktime(date("H", $datefrom), date("i", $datefrom), date("s", $datefrom), date("n", $datefrom)+($months_difference), date("j", $dateto), date("Y", $datefrom)) < $dateto) {
		         $months_difference++;
		  }
		  $months_difference--;
		  $datediff = $months_difference;
		  break;
	case 'y': // Difference between day numbers
	          $datediff = date("z", $dateto) - date("z", $datefrom);
	          break;
	case "d": // Number of full days
	          $datediff = floor($difference / 86400);
	          break;
	case "w": // Number of full weekdays
	         $days_difference = floor($difference / 86400);
	         $weeks_difference = floor($days_difference / 7); // Complete weeks
	         $first_day = date("w", $datefrom);
	         $days_remainder = floor($days_difference % 7);
	         $odd_days = $first_day + $days_remainder; // Do we have a Saturday or Sunday in the remainder?
	         if ($odd_days > 7) { // Sunday
	            $days_remainder--;
	        }
	        if ($odd_days > 6) { // Saturday
	            $days_remainder--;
	        }
	        $datediff = ($weeks_difference * 5) + $days_remainder;
	        break;
	case "ww": // Number of full weeks
	           $datediff = floor($difference / 604800);
	           break;
	case "h": // Number of full hours
	          $datediff = floor($difference / 3600);
	          break;
	case "n": // Number of full minutes
	          $datediff = floor($difference / 60);
	          break;
	default: // Number of full seconds (default)
	          $datediff = $difference;
	          break;
	}    
	return $datediff;
}

/***** Return the IP Address  *****/
function get_client_ip() {
		
	    $ipaddress = '';
	    if($_SERVER['REMOTE_ADDR'])
	        $ipaddress = $_SERVER['REMOTE_ADDR'];
		else if($_SERVER['HTTP_CLIENT_IP'])
	        $ipaddress = $_SERVER['HTTP_CLIENT_IP'];
	    else if($_SERVER['HTTP_X_FORWARDED_FOR'])
	        $ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];
	    else if($_SERVER['HTTP_X_FORWARDED'])
	        $ipaddress = $_SERVER['HTTP_X_FORWARDED'];
	    else if($_SERVER['HTTP_FORWARDED_FOR'])
	        $ipaddress = $_SERVER['HTTP_FORWARDED_FOR'];
	    else if($_SERVER['HTTP_FORWARDED'])
	        $ipaddress = $_SERVER['HTTP_FORWARDED'];    
	   
	    return $ipaddress;
	}
/***** To Get Visitor Details  *****/
 	
	function getVisitorDetails () {
				
		   $ip = $this->get_client_ip();		   
		   $visitorDetails = unserialize(file_get_contents('http://www.geoplugin.net/php.gp?ip='.$ip));
		   return $visitorDetails;		
	}

/***** To Get Timezone list  *****/
/**
 * Timezones list with GMT offset
 *
 * @return array
 * @link http://stackoverflow.com/a/9328760
 */
function tz_list() {
	$zones_array = array();
	$timestamp = time();
	foreach(timezone_identifiers_list() as $key => $zone) {
		date_default_timezone_set($zone);
		$zones_array[$key]['zone'] = $zone;
		$zones_array[$key]['diff_from_GMT'] = 'UTC/GMT ' . date('P', $timestamp);
	}
	return $zones_array;
}

/***** Days In Month  *****/
function days_in_month($month, $year) {
		// Using first day of the month, it doesn't really matter
	    	$date = $year."-".$month."-1";
	 	return date("t", strtotime($date));
 	}

/***** Random Password  *****/
function random_password() {
		$alphabet = "abcdefghijklmnopqrstuwxyzABCDEFGHIJKLMNOPQRSTUWXYZ0123456789";
    		$pass = array(); //remember to declare $pass as an array
    		$alphaLength = strlen($alphabet) - 1; //put the length -1 in cache
    		for ($i = 0; $i < 8; $i++) {
        		$n = rand(0, $alphaLength);
       			$pass[] = $alphabet[$n];
    		}
    		return implode($pass); //turn the array into a string
	}

/***** Validate Email  *****/
function validate_email($email) {
		if (!preg_match("/([\w\-]+\@[\w\-]+\.[\w\-]+)/",$email))
		{
			return 'Invalid';
		}else{		
			return 'Valid';
		}

	}

}
