<?php
App::uses('AppController', 'Controller');
/**
 * ClientDetails Controller
 *
 * @property ClientDetail $ClientDetail
 */
class ClientDetailsController extends AppController {


/**
 * index method
 *
 * @return void
 */
	public function index() {
		$this->ClientDetail->recursive = 0;
		$this->set('clientDetails', $this->paginate());
	}

/**
 * view method
 *
 * @param string $id
 * @return void
 */
	public function view($id = null) {
		$this->ClientDetail->id = $id;
		if (!$this->ClientDetail->exists()) {
			throw new NotFoundException(__('Invalid client detail'));
		}
		$this->set('clientDetail', $this->ClientDetail->read(null, $id));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		if ($this->request->is('post')) {
			$this->ClientDetail->create();
			if ($this->ClientDetail->save($this->request->data)) {
				$this->Session->setFlash(__('The client detail has been saved'));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The client detail could not be saved. Please, try again.'));
			}
		}
		$billingUnits = $this->ClientDetail->BillingUnit->find('list');
		$brandsServices = $this->ClientDetail->BrandsService->find('list');
		$brandsPackages = $this->ClientDetail->BrandsPackage->find('list');
		$this->set(compact('billingUnits', 'brandsServices', 'brandsPackages'));
	}

/**
 * edit method
 *
 * @param string $id
 * @return void
 */
	public function edit($id = null) {
		$this->ClientDetail->id = $id;
		if (!$this->ClientDetail->exists()) {
			throw new NotFoundException(__('Invalid client detail'));
		}
		if ($this->request->is('post') || $this->request->is('put')) {
			if ($this->ClientDetail->save($this->request->data)) {
				$this->Session->setFlash(__('The client detail has been saved'));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The client detail could not be saved. Please, try again.'));
			}
		} else {
			$this->request->data = $this->ClientDetail->read(null, $id);
		}
		$billingUnits = $this->ClientDetail->BillingUnit->find('list');
		$brandsServices = $this->ClientDetail->BrandsService->find('list');
		$brandsPackages = $this->ClientDetail->BrandsPackage->find('list');
		$this->set(compact('billingUnits', 'brandsServices', 'brandsPackages'));
	}

/**
 * delete method
 *
 * @param string $id
 * @return void
 */
	public function delete($id = null,$clientid=null) {
		$this->ClientDetail->id = $id;
		if (!$this->ClientDetail->exists()) {
			throw new NotFoundException(__('Invalid client detail'));
		}
		if ($this->ClientDetail->delete()) {
			$this->Session->setFlash(__('Selected Brand deleted'));
			$this->redirect(array('controller'=>'clients','action' => 'edit',$clientid));
		}
		$this->Session->setFlash(__('Client detail was not deleted'));
		$this->redirect(array('action' => 'index'));
	}
}
